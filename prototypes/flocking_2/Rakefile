def gather_files_to_compile
    files = Dir.glob('coffee/components/*.coffee')
    files << Dir.glob('coffee/entities/*.coffee')
    files << Dir.glob('coffee/*.coffee')
    files.flatten!
end

$source_files = gather_files_to_compile
OUTPUT = 'public/js/game.js'

def generate_compile_fragment
    $compile_fragment = "-cj #{OUTPUT} #{$source_files.join(" ")}"
end

generate_compile_fragment

def command_echoing_output(cmd)
    $stdout::puts cmd
    IO::popen(cmd) do |o|
        o.each do |output|
            $stdout::print output
            check_files = gather_files_to_compile
            if check_files.length != $source_files.length
                # A different set of files are available to watch
                $source_files = check_files
                generate_compile_fragment

                # Kill the process so we can ask coffee to watch the new
                # file list
                Process.kill 'INT', o.pid
            end
        end
    end
end

desc "Deletes generated files"
task :clean do
    File.delete OUTPUT if File.exists? OUTPUT
end

desc "Generates builder JavaScript"
task :default do
    command_echoing_output "coffee #{$compile_fragment}"
end

desc "Watches the files and recompiles as necessary"
task :watch do
    while true
        $stdout::puts "Watching for changed files. Press CTRL-C to end."
        command_echoing_output "coffee -w #{$compile_fragment}"
    end
end
